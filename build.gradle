plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'com.google.cloud.tools.jib' version '3.3.1'
}


jib {
	to {
		image = "sanha1998/text-me-docker-repo"
	}
	from {
		image = "eclipse-temurin:11-jre"
	}
	container {
		jvmFlags = ["-Xms128m", "-Xmx128m"]
		environment = [
				'DATASOURCE_URL': System.getenv('DATASOURCE_URL'),
				'DATASOURCE_USERNAME': System.getenv('DATASOURCE_USERNAME'),
				'DATASOURCE_PASSWORD': System.getenv('DATASOURCE_PASSWORD'),
				'JWT_SECRET_KEY': System.getenv('JWT_SECRET_KEY'),
				'JWT_EXPIRED_IN': System.getenv('JWT_EXPIRED_IN')
		]
	}
}
group = 'store.itpick'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.session:spring-session-jdbc'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2', 'io.jsonwebtoken:jjwt-jackson:0.11.2'

}

tasks.named('test') {
	useJUnitPlatform()
}
